name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install android-tools-mkbootimg bc bison build-essential ca-certificates cpio curl flex git kmod libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
          sudo ln -sf /usr/bin/python2.7 /usr/bin/python
          sudo wget https://raw.githubusercontent.com/LineageOS/android_system_core/lineage-17.1/mkbootimg/mkbootimg.py -O /usr/bin/mkbootimg

      - name: Build
        run: ./build.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: out/*

  build-dandelion:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install android-tools-mkbootimg bc bison build-essential ca-certificates cpio curl flex git kmod libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
          sudo ln -sf /usr/bin/python2.7 /usr/bin/python
          sudo wget https://raw.githubusercontent.com/LineageOS/android_system_core/lineage-17.1/mkbootimg/mkbootimg.py -O /usr/bin/mkbootimg

      - name: Build for Dandelion
        run: ./build.sh -d dandelion

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-dandelion-artifacts
          path: out/*

  flashable:
    runs-on: ubuntu-20.04
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y img2simg jq sudo wget xz-utils

      - name: Prepare flashable images
        run: |
          DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
          ./build/fetch-and-prepare-latest-ota.sh "16.04/arm64/android9/devel" "$DEVICE" ota
          mkdir -p out
          ./build/system-image-from-ota.sh ota/ubuntu_command out

      - name: Upload flashable artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flashable-artifacts
          path: |
            out/boot.img
            out/dtbo.img
            out/recovery.img
            out/system.img

  devel-flashable:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y img2simg jq sudo wget xz-utils

      - name: Prepare development flashable images
        run: |
          DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
          ./build/prepare-fake-ota.sh out/device_$DEVICE.tar.xz ota
          mkdir -p out
          ./build/system-image-from-ota.sh ota/ubuntu_command out

      - name: Upload development flashable artifacts
        uses: actions/upload-artifact@v3
        with:
          name: devel-flashable-artifacts
          path: |
            out/boot.img
            out/dtbo.img
            out/recovery.img
            out/system.img

  devel-flashable-dandelion:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y img2simg jq sudo wget xz-utils

      - name: Prepare development flashable images for Dandelion
        run: |
          DEVICE="$(source deviceinfo-dandelion && echo $deviceinfo_codename)"
          ./build/prepare-fake-ota.sh out/device_$DEVICE.tar.xz ota
          ./build/system-image-from-ota.sh ota/ubuntu_command out

      - name: Upload development flashable artifacts for Dandelion
        uses: actions/upload-artifact@v3
        with:
          name: devel-flashable-dandelion-artifacts
          path: |
            out/boot.img
            out/dtbo.img
            out/recovery.img
            out/system.img
